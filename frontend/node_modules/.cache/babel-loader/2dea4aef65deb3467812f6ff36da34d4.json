{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Kone\\\\OneDrive\\\\ALKHAF\\\\projects\\\\tradedashboard\\\\frontend\\\\src\\\\Plot.js\";\nimport React from 'react';\nimport Plotly from 'plotly.js-basic-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Plot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.drawPlot = () => {\n      const {\n        data\n      } = this.props;\n\n      // Transform data for Plotly\n      const transformedData = [];\n      const countries = Object.keys(data);\n      countries.forEach(country => {\n        const importData = data[country].import;\n        const exportData = data[country].export;\n        const importTrace = {\n          x: Object.keys(importData),\n          y: Object.values(importData),\n          type: 'scatter',\n          mode: 'lines+markers',\n          name: `${country} - Import`\n        };\n        const exportTrace = {\n          x: Object.keys(exportData),\n          y: Object.values(exportData),\n          type: 'scatter',\n          mode: 'lines+markers',\n          name: `${country} - Export`\n        };\n        transformedData.push(importTrace, exportTrace);\n      });\n      const layout = {\n        title: 'Import/Export Data',\n        xaxis: {\n          title: 'Year'\n        },\n        yaxis: {\n          title: 'Value'\n        }\n      };\n      Plotly.newPlot('plot', transformedData, layout);\n    };\n  }\n  componentDidMount() {\n    this.drawPlot();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      this.drawPlot();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default Plot;","map":{"version":3,"names":["React","Plotly","jsxDEV","_jsxDEV","Plot","Component","constructor","args","drawPlot","data","props","transformedData","countries","Object","keys","forEach","country","importData","import","exportData","export","importTrace","x","y","values","type","mode","name","exportTrace","push","layout","title","xaxis","yaxis","newPlot","componentDidMount","componentDidUpdate","prevProps","render","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ali Kone/OneDrive/ALKHAF/projects/tradedashboard/frontend/src/Plot.js"],"sourcesContent":["import React from 'react';\r\nimport Plotly from 'plotly.js-basic-dist';\r\n\r\nclass Plot extends React.Component {\r\n  componentDidMount() {\r\n    this.drawPlot();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data !== prevProps.data) {\r\n      this.drawPlot();\r\n    }\r\n  }\r\n\r\n  drawPlot = () => {\r\n    const { data } = this.props;\r\n  \r\n    // Transform data for Plotly\r\n    const transformedData = [];\r\n    const countries = Object.keys(data);\r\n  \r\n    countries.forEach(country => {\r\n      const importData = data[country].import;\r\n      const exportData = data[country].export;\r\n  \r\n      const importTrace = {\r\n        x: Object.keys(importData),\r\n        y: Object.values(importData),\r\n        type: 'scatter',\r\n        mode: 'lines+markers',\r\n        name: `${country} - Import`\r\n      };\r\n  \r\n      const exportTrace = {\r\n        x: Object.keys(exportData),\r\n        y: Object.values(exportData),\r\n        type: 'scatter',\r\n        mode: 'lines+markers',\r\n        name: `${country} - Export`\r\n      };\r\n  \r\n      transformedData.push(importTrace, exportTrace);\r\n    });\r\n  \r\n    const layout = {\r\n      title: 'Import/Export Data',\r\n      xaxis: {\r\n        title: 'Year'\r\n      },\r\n      yaxis: {\r\n        title: 'Value'\r\n      }\r\n    };\r\n  \r\n    Plotly.newPlot('plot', transformedData, layout);\r\n  };\r\n  \r\n\r\n  render() {\r\n    return <div id=\"plot\"></div>;\r\n  }\r\n}\r\n\r\nexport default Plot;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,SAASJ,KAAK,CAACK,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAWjCC,QAAQ,GAAG,MAAM;MACf,MAAM;QAAEC;MAAK,CAAC,GAAG,IAAI,CAACC,KAAK;;MAE3B;MACA,MAAMC,eAAe,GAAG,EAAE;MAC1B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC;MAEnCG,SAAS,CAACG,OAAO,CAACC,OAAO,IAAI;QAC3B,MAAMC,UAAU,GAAGR,IAAI,CAACO,OAAO,CAAC,CAACE,MAAM;QACvC,MAAMC,UAAU,GAAGV,IAAI,CAACO,OAAO,CAAC,CAACI,MAAM;QAEvC,MAAMC,WAAW,GAAG;UAClBC,CAAC,EAAET,MAAM,CAACC,IAAI,CAACG,UAAU,CAAC;UAC1BM,CAAC,EAAEV,MAAM,CAACW,MAAM,CAACP,UAAU,CAAC;UAC5BQ,IAAI,EAAE,SAAS;UACfC,IAAI,EAAE,eAAe;UACrBC,IAAI,EAAG,GAAEX,OAAQ;QACnB,CAAC;QAED,MAAMY,WAAW,GAAG;UAClBN,CAAC,EAAET,MAAM,CAACC,IAAI,CAACK,UAAU,CAAC;UAC1BI,CAAC,EAAEV,MAAM,CAACW,MAAM,CAACL,UAAU,CAAC;UAC5BM,IAAI,EAAE,SAAS;UACfC,IAAI,EAAE,eAAe;UACrBC,IAAI,EAAG,GAAEX,OAAQ;QACnB,CAAC;QAEDL,eAAe,CAACkB,IAAI,CAACR,WAAW,EAAEO,WAAW,CAAC;MAChD,CAAC,CAAC;MAEF,MAAME,MAAM,GAAG;QACbC,KAAK,EAAE,oBAAoB;QAC3BC,KAAK,EAAE;UACLD,KAAK,EAAE;QACT,CAAC;QACDE,KAAK,EAAE;UACLF,KAAK,EAAE;QACT;MACF,CAAC;MAED9B,MAAM,CAACiC,OAAO,CAAC,MAAM,EAAEvB,eAAe,EAAEmB,MAAM,CAAC;IACjD,CAAC;EAAA;EAnDDK,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAAC3B,QAAQ,CAAC,CAAC;EACjB;EAEA4B,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IAAI,IAAI,CAAC3B,KAAK,CAACD,IAAI,KAAK4B,SAAS,CAAC5B,IAAI,EAAE;MACtC,IAAI,CAACD,QAAQ,CAAC,CAAC;IACjB;EACF;EA8CA8B,MAAMA,CAAA,EAAG;IACP,oBAAOnC,OAAA;MAAKoC,EAAE,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC9B;AACF;AAEA,eAAevC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}