{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Kone\\\\OneDrive\\\\ALKHAF\\\\projects\\\\tradedashboard\\\\frontend\\\\src\\\\Plot.js\";\nimport React from 'react';\nimport Plotly from 'plotly.js-basic-dist';\nimport LineChart from './LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Plot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.drawPlot = () => {\n      const {\n        data,\n        selectedCountries,\n        selectedYears\n      } = this.props;\n\n      // Define bar chart data for import and export\n      const importBarData = selectedCountries.map(country => ({\n        x: selectedYears,\n        y: Object.values(data[country].import),\n        type: 'bar',\n        name: `${country} - Import`\n      }));\n      const exportBarData = selectedCountries.map(country => ({\n        x: selectedYears,\n        y: Object.values(data[country].export),\n        type: 'bar',\n        name: `${country} - Export`\n      }));\n      const layout = {\n        title: {\n          text: 'Import/Export Data',\n          font: {\n            size: 24 // Increase the title font size\n          },\n          y: 0.87 // Increase the space between title and chart\n        },\n        xaxis: {\n          title: 'Year'\n        },\n        yaxis: {\n          title: 'Value'\n        },\n        hovermode: 'closest',\n        // Display hover labels closest to the cursor\n        legend: {\n          orientation: 'h',\n          // Horizontal legend\n          yanchor: 'bottom',\n          y: 1.05,\n          // Increase the space between chart and legend\n          xanchor: 'right',\n          x: 1\n        },\n        margin: {\n          // Increase space between countries' charts\n          t: 100,\n          // Top margin\n          b: 150 // Bottom margin\n        },\n        width: 1200,\n        // Increase chart width for higher resolution\n        height: 800 // Increase chart height for higher resolution\n      };\n      Plotly.newPlot('plot', [...importBarData, ...exportBarData], layout);\n    };\n  }\n  componentDidMount() {\n    this.drawPlot();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      this.drawPlot();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"plot\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: this.props.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Plot;","map":{"version":3,"names":["React","Plotly","LineChart","jsxDEV","_jsxDEV","Plot","Component","constructor","args","drawPlot","data","selectedCountries","selectedYears","props","importBarData","map","country","x","y","Object","values","import","type","name","exportBarData","export","layout","title","text","font","size","xaxis","yaxis","hovermode","legend","orientation","yanchor","xanchor","margin","t","b","width","height","newPlot","componentDidMount","componentDidUpdate","prevProps","render","id","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ali Kone/OneDrive/ALKHAF/projects/tradedashboard/frontend/src/Plot.js"],"sourcesContent":["import React from 'react';\r\nimport Plotly from 'plotly.js-basic-dist';\r\nimport LineChart from './LineChart';\r\n\r\nclass Plot extends React.Component {\r\n  componentDidMount() {\r\n    this.drawPlot();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data !== prevProps.data) {\r\n      this.drawPlot();\r\n    }\r\n  }\r\n\r\n  drawPlot = () => {\r\n    const { data, selectedCountries, selectedYears } = this.props;\r\n\r\n    // Define bar chart data for import and export\r\n    const importBarData = selectedCountries.map(country => ({\r\n      x: selectedYears,\r\n      y: Object.values(data[country].import),\r\n      type: 'bar',\r\n      name: `${country} - Import`\r\n    }));\r\n\r\n    const exportBarData = selectedCountries.map(country => ({\r\n      x: selectedYears,\r\n      y: Object.values(data[country].export),\r\n      type: 'bar',\r\n      name: `${country} - Export`\r\n    }));\r\n\r\n    const layout = {\r\n      title: {\r\n        text: 'Import/Export Data',\r\n        font: {\r\n          size: 24 // Increase the title font size\r\n        },\r\n        y: 0.87 // Increase the space between title and chart\r\n      },\r\n      xaxis: {\r\n        title: 'Year'\r\n      },\r\n      yaxis: {\r\n        title: 'Value'\r\n      },\r\n      hovermode: 'closest', // Display hover labels closest to the cursor\r\n      legend: {\r\n        orientation: 'h', // Horizontal legend\r\n        yanchor: 'bottom',\r\n        y: 1.05, // Increase the space between chart and legend\r\n        xanchor: 'right',\r\n        x: 1\r\n      },\r\n      margin: { // Increase space between countries' charts\r\n        t: 100, // Top margin\r\n        b: 150 // Bottom margin\r\n      },\r\n      width: 1200, // Increase chart width for higher resolution\r\n      height: 800 // Increase chart height for higher resolution\r\n    };\r\n\r\n    Plotly.newPlot('plot', [...importBarData, ...exportBarData], layout);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"plot\">\r\n        <LineChart data={this.props.data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Plot;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,IAAI,SAASL,KAAK,CAACM,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAWjCC,QAAQ,GAAG,MAAM;MACf,MAAM;QAAEC,IAAI;QAAEC,iBAAiB;QAAEC;MAAc,CAAC,GAAG,IAAI,CAACC,KAAK;;MAE7D;MACA,MAAMC,aAAa,GAAGH,iBAAiB,CAACI,GAAG,CAACC,OAAO,KAAK;QACtDC,CAAC,EAAEL,aAAa;QAChBM,CAAC,EAAEC,MAAM,CAACC,MAAM,CAACV,IAAI,CAACM,OAAO,CAAC,CAACK,MAAM,CAAC;QACtCC,IAAI,EAAE,KAAK;QACXC,IAAI,EAAG,GAAEP,OAAQ;MACnB,CAAC,CAAC,CAAC;MAEH,MAAMQ,aAAa,GAAGb,iBAAiB,CAACI,GAAG,CAACC,OAAO,KAAK;QACtDC,CAAC,EAAEL,aAAa;QAChBM,CAAC,EAAEC,MAAM,CAACC,MAAM,CAACV,IAAI,CAACM,OAAO,CAAC,CAACS,MAAM,CAAC;QACtCH,IAAI,EAAE,KAAK;QACXC,IAAI,EAAG,GAAEP,OAAQ;MACnB,CAAC,CAAC,CAAC;MAEH,MAAMU,MAAM,GAAG;QACbC,KAAK,EAAE;UACLC,IAAI,EAAE,oBAAoB;UAC1BC,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE,CAAC;UACX,CAAC;UACDZ,CAAC,EAAE,IAAI,CAAC;QACV,CAAC;QACDa,KAAK,EAAE;UACLJ,KAAK,EAAE;QACT,CAAC;QACDK,KAAK,EAAE;UACLL,KAAK,EAAE;QACT,CAAC;QACDM,SAAS,EAAE,SAAS;QAAE;QACtBC,MAAM,EAAE;UACNC,WAAW,EAAE,GAAG;UAAE;UAClBC,OAAO,EAAE,QAAQ;UACjBlB,CAAC,EAAE,IAAI;UAAE;UACTmB,OAAO,EAAE,OAAO;UAChBpB,CAAC,EAAE;QACL,CAAC;QACDqB,MAAM,EAAE;UAAE;UACRC,CAAC,EAAE,GAAG;UAAE;UACRC,CAAC,EAAE,GAAG,CAAC;QACT,CAAC;QACDC,KAAK,EAAE,IAAI;QAAE;QACbC,MAAM,EAAE,GAAG,CAAC;MACd,CAAC;MAEDzC,MAAM,CAAC0C,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG7B,aAAa,EAAE,GAAGU,aAAa,CAAC,EAAEE,MAAM,CAAC;IACtE,CAAC;EAAA;EA3DDkB,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACnC,QAAQ,CAAC,CAAC;EACjB;EAEAoC,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IAAI,IAAI,CAACjC,KAAK,CAACH,IAAI,KAAKoC,SAAS,CAACpC,IAAI,EAAE;MACtC,IAAI,CAACD,QAAQ,CAAC,CAAC;IACjB;EACF;EAqDAsC,MAAMA,CAAA,EAAG;IACP,oBACE3C,OAAA;MAAK4C,EAAE,EAAC,MAAM;MAAAC,QAAA,eACZ7C,OAAA,CAACF,SAAS;QAACQ,IAAI,EAAE,IAAI,CAACG,KAAK,CAACH;MAAK;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;AACF;AAEA,eAAehD,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}