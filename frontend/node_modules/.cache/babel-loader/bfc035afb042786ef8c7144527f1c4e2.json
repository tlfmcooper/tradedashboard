{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Kone\\\\OneDrive\\\\ALKHAF\\\\projects\\\\tradedashboard\\\\frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Plotly from 'plotly.js-basic-dist';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Plot = createPlotlyComponent(Plotly);\n_c = Plot;\nconst Dashboard = ({\n  data,\n  handleCountryChange,\n  handleYearChange\n}) => {\n  _s();\n  const [selectedCountries, setSelectedCountries] = useState(Object.keys(data));\n  const [selectedYears, setSelectedYears] = useState([2015, 2020]);\n  const filteredData = Object.entries(data).filter(([country]) => selectedCountries.includes(country)).map(([country, values]) => ({\n    name: country,\n    import: values.import,\n    export: values.export\n  }));\n  const filteredDataInRange = filteredData.map(country => ({\n    ...country,\n    import: Object.fromEntries(Object.entries(country.import).filter(([year]) => {\n      return parseInt(year) >= selectedYears[0] && parseInt(year) <= selectedYears[1];\n    })),\n    export: Object.fromEntries(Object.entries(country.export).filter(([year]) => {\n      return parseInt(year) >= selectedYears[0] && parseInt(year) <= selectedYears[1];\n    }))\n  }));\n  const importBarData = filteredDataInRange.map(country => ({\n    x: Object.keys(country.import),\n    y: Object.values(country.import),\n    name: `${country.name} - Import`,\n    type: 'bar'\n  }));\n  const exportBarData = filteredDataInRange.map(country => ({\n    x: Object.keys(country.export),\n    y: Object.values(country.export),\n    name: `${country.name} - Export`,\n    type: 'bar'\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bar charts of Imports and Exports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), Object.keys(data).map(country => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: country,\n            checked: selectedCountries.includes(country),\n            onChange: handleCountryChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), country]\n        }, country, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearRange\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Select Year Range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"yearRange\",\n          type: \"range\",\n          min: 2015,\n          max: 2020,\n          value: selectedYears,\n          onChange: handleYearChange,\n          step: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [selectedYears[0], \" - \", selectedYears[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-container\",\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: importBarData,\n          layout: {\n            barmode: 'group',\n            title: 'Import Data',\n            xaxis: {\n              title: 'Year'\n            },\n            yaxis: {\n              title: 'Value'\n            },\n            width: null,\n            height: null\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot-container\",\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: exportBarData,\n          layout: {\n            barmode: 'group',\n            title: 'Export Data',\n            xaxis: {\n              title: 'Year'\n            },\n            yaxis: {\n              title: 'Value'\n            },\n            width: null,\n            height: null\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bz2qehCl6ewZXE6/UBLpN+gRpRk=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","Plotly","createPlotlyComponent","jsxDEV","_jsxDEV","Plot","_c","Dashboard","data","handleCountryChange","handleYearChange","_s","selectedCountries","setSelectedCountries","Object","keys","selectedYears","setSelectedYears","filteredData","entries","filter","country","includes","map","values","name","import","export","filteredDataInRange","fromEntries","year","parseInt","importBarData","x","y","type","exportBarData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","checked","onChange","htmlFor","id","min","max","step","layout","barmode","title","xaxis","yaxis","width","height","_c2","$RefreshReg$"],"sources":["C:/Users/Ali Kone/OneDrive/ALKHAF/projects/tradedashboard/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Plotly from 'plotly.js-basic-dist';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nconst Dashboard = ({ data, handleCountryChange, handleYearChange }) => {\r\n  const [selectedCountries, setSelectedCountries] = useState(Object.keys(data));\r\n  const [selectedYears, setSelectedYears] = useState([2015, 2020]);\r\n\r\n  const filteredData = Object.entries(data)\r\n    .filter(([country]) => selectedCountries.includes(country))\r\n    .map(([country, values]) => ({\r\n      name: country,\r\n      import: values.import,\r\n      export: values.export\r\n    }));\r\n\r\n  const filteredDataInRange = filteredData.map(country => ({\r\n    ...country,\r\n    import: Object.fromEntries(Object.entries(country.import).filter(([year]) => {\r\n      return parseInt(year) >= selectedYears[0] && parseInt(year) <= selectedYears[1];\r\n    })),\r\n    export: Object.fromEntries(Object.entries(country.export).filter(([year]) => {\r\n      return parseInt(year) >= selectedYears[0] && parseInt(year) <= selectedYears[1];\r\n    }))\r\n  }));\r\n\r\n  const importBarData = filteredDataInRange.map(country => ({\r\n    x: Object.keys(country.import),\r\n    y: Object.values(country.import),\r\n    name: `${country.name} - Import`,\r\n    type: 'bar'\r\n  }));\r\n\r\n  const exportBarData = filteredDataInRange.map(country => ({\r\n    x: Object.keys(country.export),\r\n    y: Object.values(country.export),\r\n    name: `${country.name} - Export`,\r\n    type: 'bar'\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bar charts of Imports and Exports</h1>\r\n      <div className=\"selection-container\">\r\n        <div className=\"country-selection\">\r\n          <h3>Select Countries</h3>\r\n          {Object.keys(data).map(country => (\r\n            <label key={country}>\r\n              <input type=\"checkbox\" value={country} checked={selectedCountries.includes(country)} onChange={handleCountryChange} />\r\n              {country}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <div className=\"year-selection\">\r\n          <label htmlFor=\"yearRange\"><strong>Select Year Range:</strong></label>\r\n          <input id=\"yearRange\" type=\"range\" min={2015} max={2020} value={selectedYears} onChange={handleYearChange} step={1} />\r\n          <span>{selectedYears[0]} - {selectedYears[1]}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <div className=\"plot-container\">\r\n          <Plot\r\n            data={importBarData}\r\n            layout={{\r\n              barmode: 'group',\r\n              title: 'Import Data',\r\n              xaxis: { title: 'Year' },\r\n              yaxis: { title: 'Value' },\r\n              width: null,\r\n              height: null,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <div className=\"plot-container\">\r\n          <Plot\r\n            data={exportBarData}\r\n            layout={{\r\n              barmode: 'group',\r\n              title: 'Export Data',\r\n              xaxis: { title: 'Year' },\r\n              yaxis: { title: 'Value' },\r\n              width: null,\r\n              height: null,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}