{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Kone\\\\OneDrive\\\\ALKHAF\\\\projects\\\\tradedashboard\\\\frontend\\\\src\\\\Plot.js\";\nimport React from 'react';\nimport Plotly from 'plotly.js-basic-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Plot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.drawPlot = () => {\n      const {\n        data\n      } = this.props;\n\n      // Transform data for Plotly here\n      // This is a placeholder for the actual data transformation logic\n      const transformedData = data.map(item => ({\n        x: item.year,\n        y: item.value,\n        type: 'scatter',\n        mode: 'lines+markers',\n        name: item.country\n      }));\n      const layout = {\n        title: 'Import/Export Data',\n        xaxis: {\n          title: 'Year'\n        },\n        yaxis: {\n          title: 'Value'\n        }\n      };\n      Plotly.newPlot('plot', transformedData, layout);\n    };\n  }\n  componentDidMount() {\n    this.drawPlot();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      this.drawPlot();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default Plot;","map":{"version":3,"names":["React","Plotly","jsxDEV","_jsxDEV","Plot","Component","constructor","args","drawPlot","data","props","transformedData","map","item","x","year","y","value","type","mode","name","country","layout","title","xaxis","yaxis","newPlot","componentDidMount","componentDidUpdate","prevProps","render","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ali Kone/OneDrive/ALKHAF/projects/tradedashboard/frontend/src/Plot.js"],"sourcesContent":["import React from 'react';\r\nimport Plotly from 'plotly.js-basic-dist';\r\n\r\nclass Plot extends React.Component {\r\n  componentDidMount() {\r\n    this.drawPlot();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data !== prevProps.data) {\r\n      this.drawPlot();\r\n    }\r\n  }\r\n\r\n  drawPlot = () => {\r\n    const { data } = this.props;\r\n\r\n    // Transform data for Plotly here\r\n    // This is a placeholder for the actual data transformation logic\r\n    const transformedData = data.map(item => ({\r\n      x: item.year,\r\n      y: item.value,\r\n      type: 'scatter',\r\n      mode: 'lines+markers',\r\n      name: item.country\r\n    }));\r\n\r\n    const layout = {\r\n      title: 'Import/Export Data',\r\n      xaxis: {\r\n        title: 'Year'\r\n      },\r\n      yaxis: {\r\n        title: 'Value'\r\n      }\r\n    };\r\n\r\n    Plotly.newPlot('plot', transformedData, layout);\r\n  };\r\n\r\n  render() {\r\n    return <div id=\"plot\"></div>;\r\n  }\r\n}\r\n\r\nexport default Plot;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,SAASJ,KAAK,CAACK,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAWjCC,QAAQ,GAAG,MAAM;MACf,MAAM;QAAEC;MAAK,CAAC,GAAG,IAAI,CAACC,KAAK;;MAE3B;MACA;MACA,MAAMC,eAAe,GAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,KAAK;QACxCC,CAAC,EAAED,IAAI,CAACE,IAAI;QACZC,CAAC,EAAEH,IAAI,CAACI,KAAK;QACbC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAEP,IAAI,CAACQ;MACb,CAAC,CAAC,CAAC;MAEH,MAAMC,MAAM,GAAG;QACbC,KAAK,EAAE,oBAAoB;QAC3BC,KAAK,EAAE;UACLD,KAAK,EAAE;QACT,CAAC;QACDE,KAAK,EAAE;UACLF,KAAK,EAAE;QACT;MACF,CAAC;MAEDtB,MAAM,CAACyB,OAAO,CAAC,MAAM,EAAEf,eAAe,EAAEW,MAAM,CAAC;IACjD,CAAC;EAAA;EAlCDK,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACnB,QAAQ,CAAC,CAAC;EACjB;EAEAoB,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IAAI,IAAI,CAACnB,KAAK,CAACD,IAAI,KAAKoB,SAAS,CAACpB,IAAI,EAAE;MACtC,IAAI,CAACD,QAAQ,CAAC,CAAC;IACjB;EACF;EA4BAsB,MAAMA,CAAA,EAAG;IACP,oBAAO3B,OAAA;MAAK4B,EAAE,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC9B;AACF;AAEA,eAAe/B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}