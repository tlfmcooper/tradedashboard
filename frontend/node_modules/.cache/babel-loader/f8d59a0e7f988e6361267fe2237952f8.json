{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Kone\\\\OneDrive\\\\ALKHAF\\\\projects\\\\tradedashboard\\\\frontend\\\\src\\\\LineChart.js\";\nimport React, { Component } from 'react';\nimport Plotly from 'plotly.js-basic-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LineChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.drawPlot = () => {\n      const {\n        data,\n        selectedCountries,\n        selectedYears\n      } = this.props;\n\n      // ... (existing code for line chart data transformation)\n\n      // Define bar chart data for import and export\n      const importBarData = selectedCountries.map(country => ({\n        x: selectedYears,\n        y: selectedYears.map(year => {\n          var _data$country, _data$country$import;\n          return ((_data$country = data[country]) === null || _data$country === void 0 ? void 0 : (_data$country$import = _data$country.import) === null || _data$country$import === void 0 ? void 0 : _data$country$import[year]) || null;\n        }),\n        type: 'bar',\n        name: `${country} - Import`\n      }));\n      const exportBarData = selectedCountries.map(country => ({\n        x: selectedYears,\n        y: selectedYears.map(year => {\n          var _data$country2, _data$country2$export;\n          return ((_data$country2 = data[country]) === null || _data$country2 === void 0 ? void 0 : (_data$country2$export = _data$country2.export) === null || _data$country2$export === void 0 ? void 0 : _data$country2$export[year]) || null;\n        }),\n        type: 'bar',\n        name: `${country} - Export`\n      }));\n      const allData = [...transformedData];\n      const layout = {\n        // ... (existing layout configuration)\n      };\n      Plotly.newPlot('line-chart', allData, layout);\n\n      // Render the bar chart\n      const barData = [...importBarData, ...exportBarData];\n      Plotly.newPlot('bar-chart', barData, {\n        barmode: 'group'\n      });\n    };\n  }\n  componentDidMount() {\n    this.drawPlot();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data || this.props.selectedCountries !== prevProps.selectedCountries || this.props.selectedYears !== prevProps.selectedYears) {\n      this.drawPlot();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"line-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bar-chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LineChart;","map":{"version":3,"names":["React","Component","Plotly","jsxDEV","_jsxDEV","LineChart","constructor","args","drawPlot","data","selectedCountries","selectedYears","props","importBarData","map","country","x","y","year","_data$country","_data$country$import","import","type","name","exportBarData","_data$country2","_data$country2$export","export","allData","transformedData","layout","newPlot","barData","barmode","componentDidMount","componentDidUpdate","prevProps","render","children","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ali Kone/OneDrive/ALKHAF/projects/tradedashboard/frontend/src/LineChart.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Plotly from 'plotly.js-basic-dist';\r\n\r\nclass LineChart extends Component {\r\n  componentDidMount() {\r\n    this.drawPlot();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.data !== prevProps.data ||\r\n      this.props.selectedCountries !== prevProps.selectedCountries ||\r\n      this.props.selectedYears !== prevProps.selectedYears\r\n    ) {\r\n      this.drawPlot();\r\n    }\r\n  }\r\n\r\n  drawPlot = () => {\r\n    const { data, selectedCountries, selectedYears } = this.props;\r\n\r\n    // ... (existing code for line chart data transformation)\r\n\r\n    // Define bar chart data for import and export\r\n    const importBarData = selectedCountries.map(country => ({\r\n      x: selectedYears,\r\n      y: selectedYears.map(year => data[country]?.import?.[year] || null),\r\n      type: 'bar',\r\n      name: `${country} - Import`\r\n    }));\r\n\r\n    const exportBarData = selectedCountries.map(country => ({\r\n      x: selectedYears,\r\n      y: selectedYears.map(year => data[country]?.export?.[year] || null),\r\n      type: 'bar',\r\n      name: `${country} - Export`\r\n    }));\r\n\r\n    const allData = [...transformedData];\r\n\r\n    const layout = {\r\n      // ... (existing layout configuration)\r\n    };\r\n\r\n    Plotly.newPlot('line-chart', allData, layout);\r\n\r\n    // Render the bar chart\r\n    const barData = [...importBarData, ...exportBarData];\r\n    Plotly.newPlot('bar-chart', barData, { barmode: 'group' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"line-chart\"></div>\r\n        <div id=\"bar-chart\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAehCC,QAAQ,GAAG,MAAM;MACf,MAAM;QAAEC,IAAI;QAAEC,iBAAiB;QAAEC;MAAc,CAAC,GAAG,IAAI,CAACC,KAAK;;MAE7D;;MAEA;MACA,MAAMC,aAAa,GAAGH,iBAAiB,CAACI,GAAG,CAACC,OAAO,KAAK;QACtDC,CAAC,EAAEL,aAAa;QAChBM,CAAC,EAAEN,aAAa,CAACG,GAAG,CAACI,IAAI;UAAA,IAAAC,aAAA,EAAAC,oBAAA;UAAA,OAAI,EAAAD,aAAA,GAAAV,IAAI,CAACM,OAAO,CAAC,cAAAI,aAAA,wBAAAC,oBAAA,GAAbD,aAAA,CAAeE,MAAM,cAAAD,oBAAA,uBAArBA,oBAAA,CAAwBF,IAAI,CAAC,KAAI,IAAI;QAAA,EAAC;QACnEI,IAAI,EAAE,KAAK;QACXC,IAAI,EAAG,GAAER,OAAQ;MACnB,CAAC,CAAC,CAAC;MAEH,MAAMS,aAAa,GAAGd,iBAAiB,CAACI,GAAG,CAACC,OAAO,KAAK;QACtDC,CAAC,EAAEL,aAAa;QAChBM,CAAC,EAAEN,aAAa,CAACG,GAAG,CAACI,IAAI;UAAA,IAAAO,cAAA,EAAAC,qBAAA;UAAA,OAAI,EAAAD,cAAA,GAAAhB,IAAI,CAACM,OAAO,CAAC,cAAAU,cAAA,wBAAAC,qBAAA,GAAbD,cAAA,CAAeE,MAAM,cAAAD,qBAAA,uBAArBA,qBAAA,CAAwBR,IAAI,CAAC,KAAI,IAAI;QAAA,EAAC;QACnEI,IAAI,EAAE,KAAK;QACXC,IAAI,EAAG,GAAER,OAAQ;MACnB,CAAC,CAAC,CAAC;MAEH,MAAMa,OAAO,GAAG,CAAC,GAAGC,eAAe,CAAC;MAEpC,MAAMC,MAAM,GAAG;QACb;MAAA,CACD;MAED5B,MAAM,CAAC6B,OAAO,CAAC,YAAY,EAAEH,OAAO,EAAEE,MAAM,CAAC;;MAE7C;MACA,MAAME,OAAO,GAAG,CAAC,GAAGnB,aAAa,EAAE,GAAGW,aAAa,CAAC;MACpDtB,MAAM,CAAC6B,OAAO,CAAC,WAAW,EAAEC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAQ,CAAC,CAAC;IAC5D,CAAC;EAAA;EA7CDC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAAC1B,QAAQ,CAAC,CAAC;EACjB;EAEA2B,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IACE,IAAI,CAACxB,KAAK,CAACH,IAAI,KAAK2B,SAAS,CAAC3B,IAAI,IAClC,IAAI,CAACG,KAAK,CAACF,iBAAiB,KAAK0B,SAAS,CAAC1B,iBAAiB,IAC5D,IAAI,CAACE,KAAK,CAACD,aAAa,KAAKyB,SAAS,CAACzB,aAAa,EACpD;MACA,IAAI,CAACH,QAAQ,CAAC,CAAC;IACjB;EACF;EAmCA6B,MAAMA,CAAA,EAAG;IACP,oBACEjC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAKmC,EAAE,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3BvC,OAAA;QAAKmC,EAAE,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAEV;AACF;AAEA,eAAetC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}